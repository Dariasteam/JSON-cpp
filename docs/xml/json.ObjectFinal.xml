<?xml version='1.0' encoding='utf-8'?>
<class id="json::ObjectFinal" interface="true" name="ObjectFinal" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <brief> Base class for final nodes</brief>
  <base access="public">
    <type name="AbstractObject" ref="json::AbstractObject#json::AbstractObject" />
    <brief> Represents a node in the tree structure</brief>
  </base>
  <subclass access="public" name="ObjectFinalBool" ref="json::ObjectFinalBool#json::ObjectFinalBool" />
  <subclass access="public" name="ObjectFinalString" ref="json::ObjectFinalString#json::ObjectFinalString" />
  <subclass access="public" name="ObjectFinalNumberInt" ref="json::ObjectFinalNumberInt#json::ObjectFinalNumberInt" />
  <subclass access="public" name="ObjectFinalNumberFloat" ref="json::ObjectFinalNumberFloat#json::ObjectFinalNumberFloat" />
  <method abstract="yes" id="json::ObjectFinal::add" name="add" override="yes" virtual="yes">
    <brief> Adds a node to tree</brief>
    <doc>As a final node node cannot have sons, this method
always deletes 'obj' and returns false

</doc>
    <return>
      <doc>false **always**</doc>
      <type builtin="yes" name="bool" />
    </return>
    <argument id="json::ObjectFinal::add::path" name="path">
      <doc>route to the node which will be father of 'obj'</doc>
      <type name="std::__cxx11::string" />
    </argument>
    <argument id="json::ObjectFinal::add::obj" name="obj">
      <doc>node to be added</doc>
      <type name="AbstractObject" qualifier="*" ref="json::AbstractObject#json::AbstractObject" />
    </argument>
    <override name="AbstractObject::add" ref="json::AbstractObject#json::AbstractObject::add" />
  </method>
  <method abstract="yes" id="json::ObjectFinal::get" name="get" override="yes" virtual="yes">
    <brief> Search for a certain node</brief>
    <doc>As a final node node cannot have sons, this is only useful
when 'path' is "", (which means this is the required node)

</doc>
    <return>
      <doc>this node when 'path' is empty, nullptr otherwise</doc>
      <type name="AbstractObject" qualifier="*" ref="json::AbstractObject#json::AbstractObject" />
    </return>
    <argument id="json::ObjectFinal::get::path" name="path">
      <doc>route to the element</doc>
      <type name="std::__cxx11::string" />
    </argument>
    <override name="AbstractObject::get" ref="json::AbstractObject#json::AbstractObject::get" />
  </method>
  <method abstract="yes" id="json::ObjectFinal::replaceValue" name="replaceValue" virtual="yes">
    <brief> Changes this object's content</brief>
    <doc>Overrides of this method transforms string data
(string 'true', string '0.2', string 'text') to its
proper value for each type (bool = true, double = 0.2, string = text)

The method is used by <ref ref="json::Parser#json::Parser">json::Parser</ref> when creating the tree
</doc>
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="json::ObjectFinal::replaceValue::value" name="value">
      <doc>value expresed in json</doc>
      <type name="std::__cxx11::string" />
    </argument>
  </method>
  <destructor abstract="yes" access="protected" id="json::ObjectFinal::~ObjectFinal" name="~ObjectFinal" virtual="yes" />
</class>
