<?xml version='1.0' encoding='utf-8'?>
<category id="Examples::Serialization::Getting started" name="Getting started" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <brief>The easiest case. Vector-like aproximation</brief>
  <doc>How to serialize one parameter of one non-abstract class using a file called "file.json" to store / retrieve the information.

By default the parameters are serialized in a subpathed vector due to json format restrictions that
does not allow to use vectors as root of the hierarchy.

#### json file, "file.json"
```json
{
  "some_path" : [
    10
  ]
}
```
#### code
```c++
#include &lt;iostream&gt;
#include "./serializable.hpp"

class A : public json::Serializable {         // derivate from 'Serializable'
private:
  int parameter;
  int nonSerializableParameter;

  SERIAL_START
    parameter                                 // we must declare the variables to be serialized
  SERIAL_END                                  // we close without declaring 'noSerializableParameter', so its not serialized
public:
  void printContent () { std::cout &lt;&lt; parameter &lt;&lt; std::endl; }
  void changeContent () { parameter = 14; }
};

int main (void) {
  A obj;
  obj.serializeIn("file.json", "some_path");   // reads "file.json" file and updates the value of 'parameter'
  obj.printContent();                          // prints 10
  obj.changeContent();                         // changes the value of 'parameter' to 14
  obj.serializeOut("file.json", "other_path"); // rewrites "file.json" with the information of the object 'obj', at path 'some_path'
}
```
#### ouput
```
10
```
#### modified json file, "file.json"
```json
{
  "other_path" : [
    14
  ]
}
```
Note that information **is not** appended to the file, the path "some_path" is lost and the new file isn't like this:
```json
{
  "some_path" : [
    10
  ]
  "other_path" : [
    14
  ]
}
```</doc>
</category>
