<?xml version='1.0' encoding='utf-8'?>
<class abstract="true" id="json::ObjectContainer" name="ObjectContainer" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <brief> Base class for Vectors &amp; Hashes</brief>
  <base access="public">
    <type name="AbstractObject" ref="json::AbstractObject#json::AbstractObject" />
    <brief> Represents a node in the tree structure</brief>
  </base>
  <subclass access="public" name="ObjectMap" ref="json::ObjectMap#json::ObjectMap">
    <brief> Representation of {}</brief>
  </subclass>
  <subclass access="public" name="ObjectVector" ref="json::ObjectVector#json::ObjectVector">
    <brief> Representation of []</brief>
  </subclass>
  <method abstract="yes" id="json::ObjectContainer::insert" name="insert" virtual="yes">
    <brief> Inserts a son node in this object</brief>
    <doc>Overrides of this method are used when
creating the tree or adding information to it

</doc>
    <return>
      <doc>the operation is successfuly finished or not</doc>
      <type builtin="yes" name="bool" />
    </return>
    <argument id="json::ObjectContainer::insert::key" name="key">
      <doc>Key of the element ("" in vector case)</doc>
      <type name="std::string" />
    </argument>
    <argument id="json::ObjectContainer::insert::obj" name="obj">
      <doc>Node to add</doc>
      <type name="AbstractObject" qualifier="*" ref="json::AbstractObject#json::AbstractObject" />
    </argument>
  </method>
  <constructor access="protected" id="json::ObjectContainer::ObjectContainer" name="ObjectContainer" />
  <destructor abstract="yes" access="protected" id="json::ObjectContainer::~ObjectContainer" name="~ObjectContainer" virtual="yes" />
  <method abstract="yes" access="protected" id="json::ObjectContainer::pathSplitter" name="pathSplitter" virtual="yes">
    <return>
      <type name="std::string" />
    </return>
    <argument id="json::ObjectContainer::pathSplitter::path" name="path">
      <type name="std::string" qualifier=" &amp;" />
    </argument>
  </method>
</class>
