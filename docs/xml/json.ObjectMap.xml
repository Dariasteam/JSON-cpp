<?xml version='1.0' encoding='utf-8'?>
<class abstract="true" id="json::ObjectMap" name="ObjectMap" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <base access="public">
    <type name="ObjectContainer" ref="json::ObjectContainer#json::ObjectContainer" />
    <brief> Base class for Vectors &amp; Hashes</brief>
  </base>
  <variable id="json::ObjectMap::name" name="name">
    <type builtin="yes" name="char" qualifier=" const const *" />
  </variable>
  <constructor id="json::ObjectMap::ObjectMap" name="ObjectMap" />
  <constructor abstract="yes" id="json::ObjectMap::ObjectMap" name="ObjectMap">
    <argument id="json::ObjectMap::ObjectMap::obj" name="obj">
      <type name="ObjectMap" qualifier=" const &amp;" ref="json::ObjectMap#json::ObjectMap" />
    </argument>
  </constructor>
  <destructor abstract="yes" id="json::ObjectMap::~ObjectMap" name="~ObjectMap" virtual="yes" />
  <method abstract="yes" id="json::ObjectMap::add" name="add" override="yes" virtual="yes">
    <return>
      <type builtin="yes" name="bool" />
    </return>
    <argument id="json::ObjectMap::add::path" name="path">
      <type name="std::__cxx11::string" />
    </argument>
    <argument id="json::ObjectMap::add::obj" name="obj">
      <type name="AbstractObject" qualifier="*" ref="json::AbstractObject#json::AbstractObject" />
    </argument>
    <override name="AbstractObject::add" ref="json::AbstractObject#json::AbstractObject::add" />
  </method>
  <method abstract="yes" id="json::ObjectMap::erase" name="erase">
    <return>
      <type builtin="yes" name="bool" />
    </return>
    <argument id="json::ObjectMap::erase::key" name="key">
      <type name="std::__cxx11::string" />
    </argument>
  </method>
  <method abstract="yes" id="json::ObjectMap::get" name="get" override="yes" virtual="yes">
    <return>
      <type name="AbstractObject" qualifier="*" ref="json::AbstractObject#json::AbstractObject" />
    </return>
    <argument id="json::ObjectMap::get::path" name="path">
      <type name="std::__cxx11::string" />
    </argument>
    <override name="AbstractObject::get" ref="json::AbstractObject#json::AbstractObject::get" />
  </method>
  <method id="json::ObjectMap::getContent" name="getContent">
    <return>
      <type name="std::map&lt;std::__cxx11::basic_string&lt;char&gt;, json::AbstractObject *, std::less&lt;std::__cxx11::basic_string&lt;char&gt; &gt;, std::allocator&lt;std::pair&lt;const std::__cxx11::basic_string&lt;char&gt;, json::AbstractObject *&gt; &gt; &gt;" qualifier=" const &amp;" />
    </return>
  </method>
  <method abstract="yes" id="json::ObjectMap::getCopy" name="getCopy" override="yes" virtual="yes">
    <return>
      <type name="AbstractObject" qualifier="*" ref="json::AbstractObject#json::AbstractObject" />
    </return>
    <override name="AbstractObject::getCopy" ref="json::AbstractObject#json::AbstractObject::getCopy" />
  </method>
  <method id="json::ObjectMap::getKeys" name="getKeys">
    <return>
      <type name="std::vector&lt;std::__cxx11::basic_string&lt;char&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char&gt; &gt; &gt;" qualifier=" const &amp;" />
    </return>
  </method>
  <method id="json::ObjectMap::getName" name="getName" override="yes" virtual="yes">
    <return>
      <type builtin="yes" name="char" qualifier=" const *" />
    </return>
    <override name="AbstractObject::getName" ref="json::AbstractObject#json::AbstractObject::getName" />
  </method>
  <method abstract="yes" id="json::ObjectMap::insert" name="insert" override="yes" virtual="yes">
    <return>
      <type builtin="yes" name="bool" />
    </return>
    <argument id="json::ObjectMap::insert::key" name="key">
      <type name="std::__cxx11::string" />
    </argument>
    <argument id="json::ObjectMap::insert::obj" name="obj">
      <type name="AbstractObject" qualifier="*" ref="json::AbstractObject#json::AbstractObject" />
    </argument>
    <override name="ObjectContainer::insert" ref="json::ObjectContainer#json::ObjectContainer::insert" />
  </method>
  <method abstract="yes" id="json::ObjectMap::operator[]" name="operator[]">
    <return>
      <type name="AbstractObject" qualifier="*" ref="json::AbstractObject#json::AbstractObject" />
    </return>
    <argument id="json::ObjectMap::operator[]::key" name="key">
      <type name="std::__cxx11::string" />
    </argument>
  </method>
  <method abstract="yes" id="json::ObjectMap::remove" name="remove">
    <return>
      <type builtin="yes" name="bool" />
    </return>
    <argument id="json::ObjectMap::remove::key" name="key">
      <type name="std::__cxx11::string" />
    </argument>
  </method>
  <method abstract="yes" id="json::ObjectMap::replace" name="replace">
    <return>
      <type builtin="yes" name="bool" />
    </return>
    <argument id="json::ObjectMap::replace::key" name="key">
      <type name="std::__cxx11::string" />
    </argument>
    <argument id="json::ObjectMap::replace::obj" name="obj">
      <type name="AbstractObject" qualifier="*" ref="json::AbstractObject#json::AbstractObject" />
    </argument>
  </method>
  <method abstract="yes" id="json::ObjectMap::set" name="set">
    <return>
      <type builtin="yes" name="bool" />
    </return>
    <argument id="json::ObjectMap::set::key" name="key">
      <type name="std::__cxx11::string" />
    </argument>
    <argument id="json::ObjectMap::set::obj" name="obj">
      <type name="AbstractObject" qualifier="*" ref="json::AbstractObject#json::AbstractObject" />
    </argument>
  </method>
  <method id="json::ObjectMap::size" name="size">
    <return>
      <type builtin="yes" name="int" />
    </return>
  </method>
  <method abstract="yes" id="json::ObjectMap::toTxt" name="toTxt" override="yes" virtual="yes">
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="json::ObjectMap::toTxt::txt" name="txt">
      <type name="std::__cxx11::string" qualifier=" &amp;" />
    </argument>
    <argument id="json::ObjectMap::toTxt::indentLvl" name="indentLvl">
      <type builtin="yes" name="int" />
    </argument>
    <override name="AbstractObject::toTxt" ref="json::AbstractObject#json::AbstractObject::toTxt" />
  </method>
  <method abstract="yes" id="json::ObjectMap::toTxtUgly" name="toTxtUgly" override="yes" virtual="yes">
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="json::ObjectMap::toTxtUgly::txt" name="txt">
      <type name="std::__cxx11::string" qualifier=" &amp;" />
    </argument>
    <override name="AbstractObject::toTxtUgly" ref="json::AbstractObject#json::AbstractObject::toTxtUgly" />
  </method>
</class>
