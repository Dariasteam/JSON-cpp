<?xml version='1.0' encoding='utf-8'?>
<category id="Tutorials::Serialization::Using complex parameters, Hash-like" name="Using complex parameters, Hash-like" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <brief>Serializaing n dimensional vectors</brief>
  <doc>You can use n dimensional vectors of vectors, the library can handle it for you!

#### json file, "file.json"
```json
{
  "two-dimensional-matrix" : [
    [1, 3, 4],
    [6, 4, 1],
    [4, 0, 0]
  ]
}

```
#### code
```c++
#include &lt;iostream&gt;
#include &lt;vector&gt;
#include "serializable.hpp"

class A : public json::Serializable {               // derivate from 'Serializable'
private:
  std::vector &lt;std::vector &lt;int&gt; &gt; matrix;          // you can use the depth you want

  SERIAL_START
    "two-dimensional-matrix", matrix
  SERIAL_END
public:
  void changeContent () {
    for (int i = 0; i &lt; matrix.size(); i++) {
      for (int j = 0; j &lt; matrix[i].size(); j++) {
        matrix[i][j] = i * matrix.size() + j;
      }
    }
  }
};

int main (void) {
  A obj;
  obj.serializeIn("file.json");
  std::cout &lt;&lt; obj.toText() &lt;&lt; std::endl;
  obj.changeContent();
  obj.serializeOut("file.json");
}
```
#### output
```
{
  "two-dimensional-matrix" : [
    [
      1, 3, 4
    ],
    [
      6, 4, 1
    ],
    [
      4, 0, 0
    ]
  ]
}
```
#### modified json file, "file.json"
```json
{
  "two-dimensional-matrix" : [
    [
      0, 1, 2
    ],
    [
      3, 4, 5
    ],
    [
      6, 7, 8
    ]
  ]
}
```
</doc>
</category>
