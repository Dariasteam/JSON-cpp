<?xml version='1.0' encoding='utf-8'?>
<class abstract="true" id="json::ObjectFinalString" name="ObjectFinalString" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <brief> Represents a string</brief>
  <doc>Internally uses std::string
</doc>
  <base access="public">
    <type name="ObjectFinal" ref="json::ObjectFinal#json::ObjectFinal" />
    <brief> Base class for final nodes</brief>
  </base>
  <variable id="json::ObjectFinalString::name" name="name">
    <brief>This class's name, for debugging purposes</brief>
    <type builtin="yes" name="char" qualifier=" const const *" />
  </variable>
  <constructor id="json::ObjectFinalString::ObjectFinalString" name="ObjectFinalString" />
  <constructor id="json::ObjectFinalString::ObjectFinalString" name="ObjectFinalString">
    <argument id="json::ObjectFinalString::ObjectFinalString::s" name="s">
      <type name="std::string" />
    </argument>
  </constructor>
  <constructor id="json::ObjectFinalString::ObjectFinalString" name="ObjectFinalString">
    <argument id="json::ObjectFinalString::ObjectFinalString::s" name="s">
      <type builtin="yes" name="char" />
    </argument>
  </constructor>
  <constructor abstract="yes" id="json::ObjectFinalString::ObjectFinalString" name="ObjectFinalString">
    <brief> Copy constructor</brief>
    <doc>calls <ref ref="json::ObjectFinalString#json::ObjectFinalString::getCopy">json::ObjectFinalString::getCopy</ref> and <ref ref="json::AbstractObject#json::AbstractObject::getCopy">json::AbstractObject::getCopy</ref>
</doc>
    <argument id="json::ObjectFinalString::ObjectFinalString::obj" name="obj">
      <doc>node to copy</doc>
      <type name="ObjectFinalString" qualifier=" const &amp;" ref="json::ObjectFinalString#json::ObjectFinalString" />
    </argument>
  </constructor>
  <destructor abstract="yes" id="json::ObjectFinalString::~ObjectFinalString" name="~ObjectFinalString" virtual="yes" />
  <method id="json::ObjectFinalString::getContent" name="getContent">
    <brief> Get inner data</brief>
    <return>
      <doc>inner data</doc>
      <type name="std::string" />
    </return>
  </method>
  <method abstract="yes" id="json::ObjectFinalString::getCopy" name="getCopy" override="yes" virtual="yes">
    <brief> Clone object</brief>
    <doc>Creates a copy of this object and its content

</doc>
    <return>
      <doc>a copy of this object</doc>
      <type name="AbstractObject" qualifier="*" ref="json::AbstractObject#json::AbstractObject" />
    </return>
    <override name="AbstractObject::getCopy" ref="json::AbstractObject#json::AbstractObject::getCopy" />
  </method>
  <method id="json::ObjectFinalString::getName" name="getName" override="yes" virtual="yes">
    <brief> Get method for <ref ref="json::ObjectFinalString#json::ObjectFinalString::name">json::ObjectFinalString::name</ref>
    </brief>
    <return>
      <doc><ref ref="json::ObjectFinalString#json::ObjectFinalString::name">json::ObjectFinalString::name</ref></doc>
      <type builtin="yes" name="char" qualifier=" const *" />
    </return>
    <override name="AbstractObject::getName" ref="json::AbstractObject#json::AbstractObject::getName" />
  </method>
  <method abstract="yes" id="json::ObjectFinalString::replaceValue" name="replaceValue" override="yes" virtual="yes">
    <brief> Replaces data</brief>
    <doc>Updates the content with the data of 'value'
</doc>
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="json::ObjectFinalString::replaceValue::value" name="value">
      <doc>new data</doc>
      <type name="std::string" />
    </argument>
    <override name="ObjectFinal::replaceValue" ref="json::ObjectFinal#json::ObjectFinal::replaceValue" />
  </method>
  <method abstract="yes" id="json::ObjectFinalString::toTxt" name="toTxt" override="yes" virtual="yes">
    <brief> Generates and appends json text</brief>
    <doc>Appends json content to 'txt' respecting the indentation
</doc>
    <return>
      <type builtin="yes" name="bool" />
    </return>
    <argument id="json::ObjectFinalString::toTxt::txt" name="txt">
      <doc>string to append this node's info</doc>
      <type name="std::string" qualifier=" &amp;" />
    </argument>
    <argument id="json::ObjectFinalString::toTxt::indentLvl" name="indentLvl">
      <doc>number of indentations to generate a consistent string</doc>
      <type builtin="yes" name="int" />
    </argument>
    <override name="AbstractObject::toTxt" ref="json::AbstractObject#json::AbstractObject::toTxt" />
  </method>
  <method abstract="yes" id="json::ObjectFinalString::toTxtUgly" name="toTxtUgly" override="yes" virtual="yes">
    <brief> Generates and appends json text</brief>
    <doc>Appends uglified json content to 'txt'
</doc>
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="json::ObjectFinalString::toTxtUgly::txt" name="txt">
      <doc>string to append this node's info</doc>
      <type name="std::string" qualifier=" &amp;" />
    </argument>
    <override name="AbstractObject::toTxtUgly" ref="json::AbstractObject#json::AbstractObject::toTxtUgly" />
  </method>
</class>
